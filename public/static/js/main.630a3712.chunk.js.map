{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","reportWebVitals.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","clearEventLogout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","console","log","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","startDateStart","dateEnd","startDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onDoubleClickEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","Component","component","isAuthenticated","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.630a3712.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n /* {\r\n      id:1,\r\n      title: 'Cumpleanos del jefe',\r\n      start: moment().toDate(),\r\n      end: moment().add(2, 'hours').toDate(),\r\n      bgcolor: '#fafafa',\r\n      notes: 'Comprar el paster',\r\n      user: {\r\n          _id: '1234',\r\n          name: 'Raul'\r\n      }\r\n  }  */ \r\n\r\n\r\n\r\n   uiOpenModal: '[ui] Open modal',\r\n   uiCloseModal: '[ui] Close modal',\r\n\r\n   eventSetActive: '[event] Set Active',\r\n   eventLogout: '[event] Clear events in Logout',\r\n   eventStartAddNew: '[event] Start add new',\r\n  \r\n   eventAddNew: '[event] Add new',\r\n   eventclearActiveEvent: '[event] Clear Active event',\r\n   eventUpdated: '[event] Event Updated',\r\n   eventDeleted: '[event] Event Deleted',\r\n   eventLoaded: '[event] Events Loaded',\r\n\r\n   authChecking: '[auth] Checking login state',\r\n   authCheckingFinish: '[auth] Finish checking login state',\r\n   authStartLogin: '[auth] Start login',\r\n   authLogin: '[auth] login',\r\n   authStartRegister: '[auth] Start Register',\r\n   authStartTokenRenew: '[auth] Start token renew',\r\n   authLogout: '[auth] Logout'\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n   // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n   switch ( action.type ) {\r\n      case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n      case types.authCheckingFinish:\r\n          return{\r\n              ...state,\r\n              checking: false\r\n          }\r\n         \r\n      case types.authLogout:\r\n          return{\r\n              checking: false\r\n          }    \r\n   \r\n       default:\r\n           return state\r\n   }\r\n\r\n}","\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nconst initialState = {\r\n   events: [],\r\n   activeEvent: null\r\n\r\n}\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n\r\n  switch ( action.type ) {\r\n         case types.eventSetActive:\r\n             return {\r\n                 ...state, //Todo: me quede configuarnado el reducer\r\n                  activeEvent: action.payload\r\n             }\r\n          \r\n         case types.eventAddNew:\r\n             return {\r\n                 ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n               \r\n             }\r\n          \r\n         case types.eventclearActiveEvent:\r\n             return{\r\n             ...state,\r\n             activeEvent: null\r\n           }   \r\n\r\n          case types.eventLogout:\r\n              return{\r\n                  ...state,\r\n                  events: [],\r\n                  activeEvent: {}\r\n              }  \r\n         \r\n         case types.eventUpdated:\r\n             return {\r\n                 ...state,\r\n                 events: state.events.map(\r\n                      e => ( e.id === action.payload.id ) ? action.payload : e  \r\n                 )\r\n                \r\n             }\r\n\r\n             case types.eventDeleted:\r\n                return {\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                         e => ( e.id !== state.activeEvent.id )  \r\n                    ),\r\n                    activeEvent: null\r\n                   \r\n                }\r\n\r\n             case types.eventLoaded:\r\n                 return {\r\n                     ...state,\r\n                     events: [ ...action.payload ]\r\n                 }   \r\n\r\n\r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState ={\r\n  modalOpen: false\r\n\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n              ...state,\r\n              modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n              ...state,\r\n              modalOpen: false\r\n            }   \r\n          \r\n    \r\n        default:\r\n          return state\r\n    }\r\n\r\n\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n       ui: uiReducer,\r\n       calendar: calendarReducer,\r\n       auth: authReducer\r\n        \r\n\r\n})","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\"\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}` //localhost:4000/api/\r\n     \r\n      if (method === 'GET') {\r\n         return fetch( url );\r\n      } else{\r\n         // console.log(JSON.stringify(data));\r\n          return fetch( url, {\r\n              method,\r\n              headers: {  //to see: ver esto de los headers\r\n                  'Content-type': 'application/json'\r\n              },\r\n              body: JSON.stringify( data )\r\n          })\r\n      }\r\n\r\n}\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}` //localhost:4000/api/\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n      if (method === 'GET') {\r\n         return fetch( url, {\r\n           method,\r\n           headers: {\r\n               'x-token': token\r\n           }\r\n         });\r\n      } else{\r\n         // console.log(JSON.stringify(data));\r\n          return fetch( url, {\r\n              method,\r\n              headers: {  //to see: ver esto de los headers\r\n                  'Content-type': 'application/json',\r\n                  'x-token': token\r\n              },\r\n              body: JSON.stringify( data )\r\n          })\r\n      }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n   return async( dispatch ) => {\r\n   \r\n    const resp = await fetchSinToken('auth', {email, password}, 'POST' );\r\n    const body = await resp.json()\r\n        \r\n    console.log(body);\r\n\r\n    if( body.ok ){\r\n       localStorage.setItem('token', body.token)\r\n       localStorage.setItem('token-init-date', new Date().getTime() )\r\n\r\n       dispatch( login({\r\n           uid: body.uid,\r\n           name: body.name\r\n       }))\r\n    }else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n    \r\n    \r\n   }\r\n}\r\n\r\n\r\n export const startRegister = ( name, email, password) => {\r\n     return async( dispatch ) => {\r\n          \r\n         const resp = await fetchSinToken('auth/new', {name, email,password }, 'POST')\r\n         const body = await resp.json()\r\n         console.log(body);\r\n\r\n         if( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() )\r\n     \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n         }else {\r\n           Swal.fire('Error', body.msg, 'error');\r\n         }\r\n\r\n     }\r\n\r\n   }\r\n\r\n   export const startchecking = () => { //renovar el token\r\n      return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body = await resp.json()\r\n        console.log(body);\r\n\r\n        if( body.ok ){\r\n           localStorage.setItem('token', body.token)\r\n           localStorage.setItem('token-init-date', new Date().getTime() )\r\n    \r\n           dispatch( login({\r\n               uid: body.uid,\r\n               name: body.name\r\n           }))\r\n        }else {\r\n          Swal.fire('Error', body.msg, 'error');\r\n          dispatch( checkingFinish() )\r\n        }\r\n\r\n\r\n      }\r\n   }\r\n\r\n\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish\r\n})\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    \r\n    localStorage.clear(); //voy a borrar el token del storages\r\n    dispatch(logout())\r\n    dispatch(clearEventLogout())\r\n  }\r\n\r\n}\r\n\r\n\r\nconst logout = () => ({\r\n\r\n  type: types.authLogout \r\n\r\n})\r\n\r\nconst clearEventLogout = () => ({\r\n \r\n   type: types.eventLogout\r\n\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'Fernando@gmail.com',\r\n        lPassword: '1234567'\r\n    });\r\n\r\n\r\n   \r\n\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Fernando',\r\n        rEmail: 'Fernando@gmail.com',\r\n        rPassword1: '1234567',\r\n        rPassword2: '1234567'\r\n    });\r\n\r\n   const { lEmail, lPassword} = formLoginValues\r\n   const { rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const handleLogin = ( e ) => {\r\n       e.preventDefault()\r\n\r\n      // console.log(formLoginValues);\r\n      \r\n      dispatch(startLogin(lEmail, lPassword))\r\n\r\n    }\r\n\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault()\r\n \r\n       if (rPassword1 !== rPassword2) {\r\n         return Swal.fire('Error', 'Las contrasenas deben de ser igaules', 'error');\r\n\r\n       }\r\n       \r\n       dispatch(startRegister(rName,rEmail, rPassword1 ))\r\n \r\n     }\r\n \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const NavBar = () => {\r\n\r\n const dispatch = useDispatch();\r\n  const {name} = useSelector(state => state.auth)\r\n \r\n\r\n  const handleLogout = () => {\r\n      \r\n    dispatch(startLogout())   \r\n\r\n\r\n  }\r\n\r\n return(\r\n     <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n         <span className=\"navbar-brand\">\r\n           { name }\r\n         </span>\r\n\r\n         <button \r\n            type=\"click\" \r\n            className=\"btn btn-outline-danger\"\r\n            onClick={handleLogout}>\r\n             <i className='fas fa-sign-out-alt'></i>\r\n             <span> Salir </span>\r\n         </button>\r\n     </div>\r\n )\r\n\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  // console.log(event);\r\n \r\n   const {title, user} = event;\r\n return(\r\n     <div>\r\n         <strong>{ title }</strong>\r\n         <span>- { user.name }</span>\r\n     </div>\r\n )\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from 'moment'\r\n\r\nexport const prepareEvents = ( events = [] ) => { //este helper lo que me va a hacer es llevar el string a fecha\r\n\r\n\r\n\r\n    return events.map(\r\n        (e) => ({\r\n           ...e,\r\n           end: moment( e.end ).toDate(), //genera una nueva instancia de tipo java script date\r\n           start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async(dispatch, getState) => {  //getState paa obtener el estado\r\n        \r\n       const { uid, name } = getState().auth;\r\n       \r\n        try {\r\n\r\n          const resp = await fetchConToken('events', event, 'POST');\r\n          const body = await resp.json();   \r\n           \r\n        //  console.log(body);\r\n\r\n          if ( body.ok ) {\r\n            event.id = body.evento.id\r\n            event.user = {\r\n               _id: uid,\r\n               name: name\r\n            }\r\n\r\n            //console.log(event);\r\n            dispatch( eventAddNew(event) );\r\n\r\n          }\r\n\r\n        } catch (error) {\r\n          console.log(error);  \r\n        }\r\n\r\n       \r\n   \r\n      \r\n    }\r\n\r\n}\r\n\r\n\r\n const eventAddNew = (event) => ({\r\n      type: types.eventAddNew,\r\n      payload: event\r\n})\r\n\r\nexport const eventSetActive= (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n     type: types.eventclearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n   return async(dispatch) =>{\r\n      \r\n     try {\r\n          console.log(event);\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT' );\r\n      const body = await resp.json() \r\n\r\n       if ( body.ok ) {\r\n         dispatch( eventUpdated(event) )\r\n       } else{\r\n         Swal.fire('Error', body.msg, 'error')\r\n       }\r\n\r\n     } catch (error) {\r\n       // console.log(error);\r\n     }\r\n\r\n   }\r\n}\r\n\r\n\r\nconst eventUpdated = ( event ) => ({\r\n   type: types.eventUpdated,\r\n   payload: event\r\n})\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n   return async(dispatch, getState) => {\r\n            \r\n     const { id } = getState().calendar.activeEvent;\r\n \r\n      console.log(id);\r\n\r\n    try {\r\n    \r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE' );\r\n      const body = await resp.json() \r\n\r\n      if ( body.ok ) {\r\n        dispatch( eventDeleted() )\r\n      } else{\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n\r\n    } catch (error) {\r\n     // console.log(error);\r\n    }\r\n\r\n   }\r\n\r\n}\r\n\r\n const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n     return async(dispatch) => {\r\n \r\n\r\n       try {\r\n           \r\n         const resp = await fetchConToken( 'events' );\r\n         const body = await resp.json();\r\n\r\n        const events = prepareEvents(body.eventos) \r\n         //console.log(events);\r\n         dispatch( eventLoaded(events) )\r\n\r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n\r\n     }\r\n\r\n}\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n   \r\n    type: types.eventLoaded,\r\n    payload: events\r\n\r\n})","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker'; //un selector de fecha\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n  const customStyles = {\r\n        content : {\r\n          top           : '50%',\r\n          left          : '50%',\r\n          right         : 'auto',\r\n          bottom        : 'auto',\r\n          marginRight   : '-50%',\r\n          transform     : 'translate(-50%, -50%)'\r\n        }\r\n      }; \r\n    Modal.setAppElement('#root')\r\n\r\n   const now = moment().minutes(0).seconds(0).add(1, 'hours') // voy a agregar los minutos y los segundos en cero y le agrego una  hora\r\n   const nowPlus1 = now.clone().add(1, 'hours')\r\n\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n  \r\n   \r\n    const { modalOpen } = useSelector( state => state.ui )\r\n    const { activeEvent } = useSelector( state => state.calendar ) \r\n    const dispatch = useDispatch(); \r\n\r\n    const [ dateStart, startDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, startDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid] = useState( true ); //para validar el form \r\n    \r\n    const [ formValues, setFormValues ] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n    //console.log(formValues);\r\n       //ME QUEDE ACTUALIZANDO EL EVENTO\r\n      useEffect(()=>{\r\n\r\n         if (activeEvent) { \r\n           setFormValues( activeEvent );//le paso el evento activo al form\r\n         }else{\r\n           setFormValues( initEvent );\r\n         }  \r\n      }, [activeEvent, setFormValues])\r\n\r\n    \r\n     const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n         ...formValues,\r\n         [target.name]: target.value\r\n       })\r\n    }\r\n     \r\n   \r\n   \r\n     const closeModal = () => {\r\n          dispatch( uiCloseModal() )\r\n          dispatch( eventClearActiveEvent() )\r\n        setFormValues(initEvent)\r\n     }\r\n   \r\n     const handleStartDateChange = ( e ) => {\r\n       // console.log(e);\r\n        startDateStart(e)\r\n        setFormValues({\r\n          ...formValues,\r\n          start: e\r\n        })\r\n     }\r\n   \r\n     const handleEnddatechange = ( e ) => {\r\n       startDateEnd(e)\r\n       setFormValues({\r\n        ...formValues,\r\n        end: e\r\n      })\r\n     }\r\n   \r\n    const handleSubmitForm = (e) =>{\r\n      e.preventDefault();\r\n     \r\n      \r\n       const momentStart = moment(start);\r\n       const momentEnd = moment(end);\r\n       //console.log(momentStart);\r\n   \r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            \r\n         return  Swal.fire('Error','La Fecha fin debe de ser mayor a la fecha de inicio','error')\r\n         \r\n        }\r\n   \r\n        if ( title.trim().length < 2 ){ //aqui valido el form\r\n          return setTitleValid(false);\r\n        }\r\n    \r\n   \r\n\r\n         \r\n       if(activeEvent){\r\n          // console.log(formValues);\r\n        dispatch( eventStartUpdate(formValues) )\r\n       }else{\r\n         dispatch( eventStartAddNew(formValues ) )  //agregar un nuevo evento)\r\n       }\r\n\r\n         setTitleValid(true);\r\n        closeModal()\r\n       \r\n       \r\n       //console.log(formValues);\r\n      \r\n    }\r\n\r\n return(\r\n         <Modal\r\n          isOpen={modalOpen }\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n           <h1>  { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n              className=\"container\"\r\n               onSubmit={ handleSubmitForm}>\r\n            \r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                      onChange={ handleStartDateChange }\r\n                      value={ dateStart }\r\n                      className=\"form-control\"\r\n                    />\r\n                </div>\r\n            \r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                      onChange={ handleEnddatechange }\r\n                      value={ dateEnd }\r\n                      minDate={ dateStart }\r\n                      className=\"form-control\"\r\n                    />\r\n                </div>\r\n            \r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n            \r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n            \r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            \r\n            </form>\r\n            \r\n            \r\n        </Modal>\r\n     \r\n )\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () =>{ //Fab :Flotant Action Botton\r\n\r\n   const dispatch = useDispatch();\r\n    \r\n    const handleClickNew = () => {\r\n       \r\n      dispatch(uiOpenModal())\r\n \r\n    }\r\n\r\n   return(\r\n      <button \r\n        className=\"btn btn-primary fab\"\r\n        onClick={handleClickNew}\r\n        >\r\n       \r\n         <i className=\"fas fa-plus\"></i>\r\n\r\n        </button>\r\n   )\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n   \r\n      const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n          dispatch(eventStartDelete())\r\n    }\r\n      \r\n      return(\r\n          <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n          >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n          </button>\r\n      )\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages-es'; //el messages me va aponer el calendario en spanish\r\nimport { Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport moment from 'moment';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n  moment.locale('es');\r\n  \r\n  \r\n   const localizer = momentLocalizer(moment)\r\n   \r\n  \r\n   \r\nexport const CalendarScreen = () => {\r\n       \r\n       const dispatch = useDispatch();\r\n      \r\n       const { events, activeEvent } = useSelector(state => state.calendar)\r\n       const {uid} = useSelector(state => state.auth)\r\n       // console.log(events);\r\n        \r\n       const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') || 'month' ); //con este useState manejo el view\r\n \r\n       useEffect(()=>{\r\n         \r\n        dispatch( eventStartLoading() );\r\n\r\n       },[dispatch])\r\n\r\n\r\n\r\n      const onDobleClik = () =>{ //Aqui decalaro las funciones que rsiviranlos repectivos eventos del form\r\n        dispatch(uiOpenModal())\r\n      }\r\n\r\n      const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n         dispatch(eventSetActive(e))\r\n        // dispatch(uiOpenModal())\r\n      }\r\n\r\n      const onViewChange = (e) => {\r\n        //console.log(e);\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n       \r\n      }\r\n\r\n      const onSelectSlot = (e) => {\r\n      //  console.log(e);\r\n        dispatch(eventClearActiveEvent())\r\n\r\n      }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => { //lo que regrese esat funcion va aser el estilo que se le va a aplicar al evento\r\n        // console.log(event, start, end, isSelected);\r\n          // console.log(event);\r\n         const style = {\r\n             backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n             borderRadius:'0px',\r\n             opacity:0.8,\r\n             display:'block',\r\n             color:'white'\r\n\r\n         }\r\n\r\n         return{\r\n           style\r\n         } \r\n    };\r\n\r\n\r\n\r\n\r\n return(\r\n       <div className=\"calendar-screen\">\r\n          <NavBar/>\r\n\r\n           <Calendar\r\n             localizer={ localizer }\r\n             events={ events }\r\n             startAccessor= \"start\"\r\n             endAccessor= \"end\"\r\n             messages={ messages }\r\n             eventPropGetter={ eventStyleGetter }\r\n             onSelectEvent={ onSelectEvent}\r\n             onDoubleClickEvent={ onDobleClik }\r\n             onView={ onViewChange }\r\n             onSelectSlot={ onSelectSlot}\r\n             selectable={ true }\r\n             view={ lastView }\r\n             components={{\r\n                 event:CalendarEvent\r\n             }}\r\n               />\r\n\r\n            <AddNewFab />\r\n            \r\n           {\r\n             (activeEvent) && <DeleteEventFab/>\r\n           } \r\n           \r\n\r\n            <CalendarModal />   \r\n      </div>\r\n )\r\n\r\n}","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\n\r\nexport const PublicRoute = ( {component:Component,isAuthenticated,...rest} ) =>{\r\n\r\nreturn(\r\n\r\n <Route {...rest}\r\n    component={(props) => ( \r\n                         (!isAuthenticated) \r\n                         ? (<Component {...props}/>)   //si no hay path el Route lo que hace es mandar el componente\r\n                         : (<Redirect to='/'/>) )}/>\r\n\r\n)\r\n \r\n}","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ( {component:Component,isAuthenticated,...rest}) =>{\r\n\r\nreturn(\r\n\r\n <Route {...rest} \r\n       component={ (props) =>( \r\n                              (isAuthenticated) \r\n                              ? (<Component {...props}/>) \r\n                              : (<Redirect to=\"/login\"/>) )   } />\r\n\r\n)\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { BrowserRouter as Router, \r\n        Switch, \r\n        Redirect  } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startchecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid} = useSelector( state => state.auth)\r\n\r\n\r\n  useEffect(()=>{\r\n      \r\n   dispatch( startchecking() ) \r\n\r\n  },[dispatch])\r\n\r\n   console.log(checking); \r\n\r\n   if (checking) {\r\n       return ( <h5>Espere...</h5> );\r\n   }\r\n\r\n   //nota: el doble !!uid es para si viene un string en el valor pase a true la propiedad , aunque por lo que veo no es obligatrio\r\n return(\r\n    <Router>\r\n       <div>\r\n            <Switch>\r\n            <PublicRoute \r\n               exact \r\n               path=\"/login\" \r\n               component={LoginScreen}\r\n               isAuthenticated={ !!uid }/>\r\n            <PrivateRoute \r\n              exact \r\n              path=\"/\" \r\n              component={CalendarScreen} \r\n              isAuthenticated={ !!uid }/> \r\n\r\n            <Redirect to='/'/>\r\n         </Switch>\r\n       </div>\r\n        \r\n \r\n    </Router>\r\n          \r\n );\r\n /**/\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const CalendarApp = () =>{\r\n\r\nreturn(\r\n    <Provider store={ store}>\r\n       <AppRouter />\r\n    </Provider>\r\n)\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles.css'\n\nconsole.log(process.env);\n\nReactDOM.render(\n    <CalendarApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}